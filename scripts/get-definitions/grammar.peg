all <- (multiple / single / other) *

multiple <-- '\n' defMultiple spaces open multipleId+
multipleId <-- identifier (' ' / '\t' / '\n')*

single <-- '\n' def prefix identifier

prefix <- (open spaces) / (spaces open) / space+

open < '(' / '[' / '{'

letter <- [a-z] / [A-Z] / '-' / '*' / '/' / '>' / '<' / '#' / '@' / '!' / ':' / '.' / '+' / '$' / '%' / '^' / '&' / '~'
identifier <- letter (letter / [0-9])*

defMultiple < '(' spaces 'define-values'
def < '(' spaces ('define-syntax-rule' / 'define-macro' / 'define-syntax' / 'define')

spaces < space*
space < (' ' / '\t' / '\n')

other < .