
(define (base10 x)
  (number->radix-string 10 x))

(define (base2 x)
  (number->radix-string 2 x))

(define (base2m x)
  (number->radix-string (vector #\! #\@) x))

;;;;;;;;;;;;;;;;;;;;
;;;;; base 10

(assert= (base10 (/ 314 100)) "3.14")
(assert= (base10 (/ 355 113)) "3.(1415929203539823008849557522123893805309734513274336283185840707964601769911504424778761061946902654867256637168)")
(assert= (base10 (/ 1 6)) "0.1(6)")
(assert= (base10 (/ 1 2)) "0.5")
(assert= (base10 (/ 2 4)) "0.5")
(assert= (base10 (/ 3 8)) "0.375")
(assert= (base10 (/ 100 7)) "14.(285714)")
(assert= (base10 (/ 455 8)) "56.875")
(assert= (base10 (/ 11 12)) "0.91(6)")
(assert= (base10 (/ 5 14)) "0.3(571428)")
(assert= (base10 (/ 1 17)) "0.(0588235294117647)")
(assert= (base10 (/ 17 5)) "3.4")
(assert= (base10 (/ 83 4)) "20.75")
(assert= (base10 (/ 5 81)) "0.(061728395)")
(assert= (base10 (/ 10 355)) "0.(02816901408450704225352112676056338)")
(assert= (base10 0) "0")
(assert= (base10 5) "5")
(assert= (base10 9) "9")
(assert= (base10 0.5) "0.5")
(assert= (base10 -2) "-2")
(assert= (base10 (* -1 (/ 314 100))) "-3.14")
(assert= (base10 1/2) "0.5")
(assert= (base10 2/4) "0.5")
(assert= (base10 10/355) "0.(02816901408450704225352112676056338)")

(assert (string-prefix? "0.3333" (base10 (exact->inexact (/ 1 3)))))
(assert (string-prefix? "0.33" (base10 (string->number (number->string (exact->inexact (/ 1 3)))))))

;;;;;;;;;;;;;;;;;;;;
;;;;; base 2

(assert= (base2 (/ 314 100)) "11.0(01000111101011100001)")
(assert= (base2 (/ 355 113)) "11.(0010010000111111011011110000)")
(assert= (base2 (/ 1 6)) "0.0(01)")
(assert= (base2 (/ 1 2)) "0.1")
(assert= (base2 (/ 2 4)) "0.1")
(assert= (base2 (/ 3 8)) "0.011")
(assert= (base2 (/ 100 7)) "1110.(010)")
(assert= (base2 (/ 455 8)) "111000.111")
(assert= (base2 (/ 11 12)) "0.11(10)")
(assert= (base2 (/ 5 14)) "0.0(101)")
(assert= (base2 (/ 1 17)) "0.(00001111)")
(assert= (base2 (/ 17 5)) "11.(0110)")
(assert= (base2 (/ 83 4)) "10100.11")
(assert= (base2 (/ 5 81)) "0.(000011111100110101101110100111100000011001010010001011)")
(assert= (base2 (/ 10 355)) "0.(00000111001101100001010110100010010)")
(assert= (base2 0) "0")
(assert= (base2 5) "101")
(assert= (base2 9) "1001")
(assert= (base2 0.5) "0.1")
(assert= (base2 -2) "-10")
(assert= (base2 (* -1 (/ 314 100))) "-11.0(01000111101011100001)")
(assert= (base2 1/2) "0.1")
(assert= (base2 2/4) "0.1")
(assert= (base2 10/355) "0.(00000111001101100001010110100010010)")

;;;;;;;;;;;;;;;;;;;;
;;;;; base [!,@]

(assert= (base2m (/ 314 100)) "@@.!(!@!!!@@@@!@!@@@!!!!@)")
(assert= (base2m (/ 355 113)) "@@.(!!@!!@!!!!@@@@@@!@@!@@@@!!!!)")
(assert= (base2m (/ 1 6)) "!.!(!@)")
(assert= (base2m (/ 1 2)) "!.@")
(assert= (base2m (/ 2 4)) "!.@")
(assert= (base2m (/ 3 8)) "!.!@@")
(assert= (base2m (/ 100 7)) "@@@!.(!@!)")
(assert= (base2m (/ 455 8)) "@@@!!!.@@@")
(assert= (base2m (/ 11 12)) "!.@@(@!)")
(assert= (base2m (/ 5 14)) "!.!(@!@)")
(assert= (base2m (/ 1 17)) "!.(!!!!@@@@)")
(assert= (base2m (/ 17 5)) "@@.(!@@!)")
(assert= (base2m (/ 83 4)) "@!@!!.@@")
(assert= (base2m (/ 5 81)) "!.(!!!!@@@@@@!!@@!@!@@!@@@!@!!@@@@!!!!!!@@!!@!@!!@!!!@!@@)")
(assert= (base2m (/ 10 355)) "!.(!!!!!@@@!!@@!@@!!!!@!@!@@!@!!!@!!@!)")
(assert= (base2m 0) "!")
(assert= (base2m 5) "@!@")
(assert= (base2m 9) "@!!@")
(assert= (base2m 0.5) "!.@")
(assert= (base2m -2) "-@!")
(assert= (base2m (* -1 (/ 314 100))) "-@@.!(!@!!!@@@@!@!@@@!!!!@)")
(assert= (base2m 1/2) "!.@")
(assert= (base2m 2/4) "!.@")
(assert= (base2m 10/355) "!.(!!!!!@@@!!@@!@@!!!!@!@!@@!@!!!@!!@!)")
