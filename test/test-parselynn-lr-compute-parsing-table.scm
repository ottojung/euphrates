
;;
;; Define test-case syntax.
;;


(define-syntax test-case
  (syntax-rules ()
    ((_ grammar* expected-text*)
     (let ()
       (define grammar grammar*)
       (define expected-text (string-strip expected-text*))

       (define result
         (parselynn:lr-compute-parsing-table grammar))

       (define text
         (string-strip
          (with-output-stringified
           (parselynn:lr-parsing-table:print
            result))))

       (unless (equal? text expected-text)
         (debug "\ncorrect:\n~a\n\n" text))

       (assert= text expected-text)))))


;;;;;;;;;;;;;;;;;
;;
;; Test cases:
;;


(let ()
  ;;
  ;; Simple grammar with single production.
  ;;
  ;;   Grammar:
  ;;
  ;; S -> a
  ;;

  (define grammar
    '((S (a))))

  (define expected-table
    "
+ ------------ +
!   !   $ !  a !
+ ------------ +
! 0 !     ! s1 !
+ ------------ +
! 1 ! ACC !    !
+ ------------ +
")

  (test-case grammar expected-table))


(let ()
  ;;
  ;; Start issue grammar [1].
  ;;
  ;;   Grammar:
  ;;
  ;; S -> a
  ;; S -> b
  ;;

  (define grammar
    '((S (a) (b))))

  (define expected-table
    "
+ ----------------- +
!   !   $ !  a !  b !
+ ----------------- +
! 0 !     ! s1 ! s2 !
+ ----------------- +
! 1 ! ACC !    !    !
+ ----------------- +
! 2 ! ACC !    !    !
+ ----------------- +
")

  (test-case grammar expected-table))


(let ()
  ;;
  ;; Start issue grammar [2].
  ;;
  ;;   Grammar:
  ;;
  ;; S -> a
  ;; S -> S b
  ;;

  (define grammar
    '((S (a) (S b))))

  (define expected-table
    "
+ ------------------------- +
!   !   $ !  a !      b ! S !
+ ------------------------- +
! 0 !     ! s2 !        ! 1 !
+ ------------------------- +
! 1 !     !    !     s3 !   !
+ ------------------------- +
! 2 ! ACC !    !   S← a !   !
+ ------------------------- +
! 3 ! ACC !    ! S← S b !   !
+ ------------------------- +
")

  (test-case grammar expected-table))


(let ()
  ;;
  ;; Start issue grammar [3].
  ;;
  ;;   Grammar:
  ;;
  ;; S -> a
  ;; S -> b S
  ;;

  (define grammar
    '((S (a) (b S))))

  (define expected-table
    "
+ --------------------- +
!   !   $ !  a !  b ! S !
+ --------------------- +
! 0 !     ! s1 ! s2 !   !
+ --------------------- +
! 1 ! ACC !    !    !   !
+ --------------------- +
! 2 !     ! s1 ! s2 ! 3 !
+ --------------------- +
! 3 ! ACC !    !    !   !
+ --------------------- +
")

  (test-case grammar expected-table))


(let ()
  ;;
  ;; Nonobvious conflicting grammar [1].
  ;;
  ;;   Grammar:
  ;;
  ;; S → L space split space R.
  ;; L → num | num space L.
  ;; R → num | num space R.
  ;;
  ;;   Notes:
  ;;
  ;; Taken from <https://codeberg.org/otto/euphrates/issues/46>.
  ;; Check here <https://smlweb.cpsc.ucalgary.ca/lr1.php?grammar=S+-%3E+L+space+split+space+R.%0AL+-%3E+num%0A+++%7C+num+space+L.%0AR+-%3E+num%0A+++%7C+num+space+R.%0A&substs=>.
  ;;

  (define grammar
    '((S (L space split space R))
      (L (num) (num space L))
      (R (num) (num space R))))

  (define expected-table
    "
+ ----------------------------------------------------------- +
!    !              $ ! num !          space ! split ! L !  R !
+ ----------------------------------------------------------- +
!  0 !                !  s2 !                !       ! 1 !    !
+ ----------------------------------------------------------- +
!  1 !                !     !             s5 !       !   !    !
+ ----------------------------------------------------------- +
!  2 !                !     !      s3/L← num !       !   !    !
+ ----------------------------------------------------------- +
!  3 !                !  s2 !                !       ! 4 !    !
+ ----------------------------------------------------------- +
!  4 !                !     ! L← num space L !       !   !    !
+ ----------------------------------------------------------- +
!  5 !                !     !                !    s6 !   !    !
+ ----------------------------------------------------------- +
!  6 !                !     !             s7 !       !   !    !
+ ----------------------------------------------------------- +
!  7 !                !  s9 !                !       !   !  8 !
+ ----------------------------------------------------------- +
!  8 !            ACC !     !                !       !   !    !
+ ----------------------------------------------------------- +
!  9 !         R← num !     !            s10 !       !   !    !
+ ----------------------------------------------------------- +
! 10 !                !  s9 !                !       !   ! 11 !
+ ----------------------------------------------------------- +
! 11 ! R← num space R !     !                !       !   !    !
+ ----------------------------------------------------------- +
")

  (test-case grammar expected-table))


(let ()
  ;;
  ;; Nonobvious conflicting grammar [2].
  ;;
  ;;   Grammar:
  ;;
  ;; (start    (left sep split sep right))
  ;; (left     (term) (term sep left))
  ;; (right    (term) (term sep left))
  ;; (sep      (SPACE))
  ;; (split    (/))
  ;; (term     (NUM))))
  ;;
  ;;   Notes:
  ;;
  ;; Taken from <https://codeberg.org/otto/euphrates/issues/46>.
  ;;

  (define grammar
    '((start    (left sep split sep right))
      (left     (term) (term sep left))
      (right    (term) (term sep left))
      (sep      (SPACE))
      (split    (/))
      (term     (NUM))))

  (define expected-table
    "
+ ------------------------------------------------------------------------------------------------------------- +
!    !                    $ !          / !        NUM !               SPACE ! left ! right ! sep ! split ! term !
+ ------------------------------------------------------------------------------------------------------------- +
!  0 !                      !            !         s1 !                     !    2 !       !     !       !    3 !
+ ------------------------------------------------------------------------------------------------------------- +
!  1 !                      !            !            !           term← NUM !      !       !     !       !      !
+ ------------------------------------------------------------------------------------------------------------- +
!  2 !                      !            !            !                  s7 !      !       !   8 !       !      !
+ ------------------------------------------------------------------------------------------------------------- +
!  3 !                      !            !            !       s4/left← term !      !       !   5 !       !      !
+ ------------------------------------------------------------------------------------------------------------- +
!  4 !                      !            ! sep← SPACE !                     !      !       !     !       !      !
+ ------------------------------------------------------------------------------------------------------------- +
!  5 !                      !            !         s1 !                     !    6 !       !     !       !    3 !
+ ------------------------------------------------------------------------------------------------------------- +
!  6 !                      !            !            ! left← term sep left !      !       !     !       !      !
+ ------------------------------------------------------------------------------------------------------------- +
!  7 !                      ! sep← SPACE !            !                     !      !       !     !       !      !
+ ------------------------------------------------------------------------------------------------------------- +
!  8 !                      !         s9 !            !                     !      !       !     !    10 !      !
+ ------------------------------------------------------------------------------------------------------------- +
!  9 !                      !            !            !            split← / !      !       !     !       !      !
+ ------------------------------------------------------------------------------------------------------------- +
! 10 !                      !            !            !                  s4 !      !       !  11 !       !      !
+ ------------------------------------------------------------------------------------------------------------- +
! 11 !                      !            !        s12 !                     !      !    13 !     !       !   14 !
+ ------------------------------------------------------------------------------------------------------------- +
! 12 !            term← NUM !            !            !           term← NUM !      !       !     !       !      !
+ ------------------------------------------------------------------------------------------------------------- +
! 13 !                  ACC !            !            !                     !      !       !     !       !      !
+ ------------------------------------------------------------------------------------------------------------- +
! 14 !          right← term !            !            !                  s4 !      !       !  15 !       !      !
+ ------------------------------------------------------------------------------------------------------------- +
! 15 !                      !            !        s12 !                     !   16 !       !     !       !   17 !
+ ------------------------------------------------------------------------------------------------------------- +
! 16 ! right← term sep left !            !            !                     !      !       !     !       !      !
+ ------------------------------------------------------------------------------------------------------------- +
! 17 !           left← term !            !            !                  s4 !      !       !  18 !       !      !
+ ------------------------------------------------------------------------------------------------------------- +
! 18 !                      !            !        s12 !                     !   19 !       !     !       !   17 !
+ ------------------------------------------------------------------------------------------------------------- +
! 19 !  left← term sep left !            !            !                     !      !       !     !       !      !
+ ------------------------------------------------------------------------------------------------------------- +
")

  (test-case grammar expected-table))


(let ()
  ;;
  ;; Youtube grammar. (https://invidious.reallyaweso.me/watch?v=sh_X56otRdU)
  ;;
  ;;   Grammar:
  ;;
  ;; S -> X X
  ;; X -> a X
  ;; X -> b
  ;;
  ;;   Notes:
  ;;
  ;; Compared to the reference graph:
  ;; - Our items have single symbols as lookaheads
  ;;   whereas the reference uses sets of symbols.
  ;;   Ex. we have both ", a" and ", b" instead of ", a/b".
  ;; - We have a different state 0.
  ;;   This is because we do not create an additional S' nonterminal.
  ;; - Correspondence between states is the following:
  ;;
  ;;       / Reference state # / Our state # /
  ;;       / ----------------- / ----------- /
  ;;       /         0         /      0      /
  ;;       /         1         /      -      /
  ;;       /         2         /      1      /
  ;;       /         3         /      3      /
  ;;       /         4         /      2      /
  ;;       /         5         /      5      /
  ;;       /         6         /      6      /
  ;;       /         7         /      7      /
  ;;       /         8         /      8      /
  ;;       /         9         /      4      /
  ;;       / ----------------- / ----------- /
  ;;
  ;;

  (define grammar
    '((S (X X))
      (X (a X)
         (b))))

  (define expected-table
    "
+ -------------------------------- +
!   !      $ !      a !      b ! X !
+ -------------------------------- +
! 0 !        !     s2 !     s3 ! 1 !
+ -------------------------------- +
! 1 !        !     s6 !     s7 ! 5 !
+ -------------------------------- +
! 2 !        !     s2 !     s3 ! 4 !
+ -------------------------------- +
! 3 !        !   X← b !   X← b !   !
+ -------------------------------- +
! 4 !        ! X← a X ! X← a X !   !
+ -------------------------------- +
! 5 !    ACC !        !        !   !
+ -------------------------------- +
! 6 !        !     s6 !     s7 ! 8 !
+ -------------------------------- +
! 7 !   X← b !        !        !   !
+ -------------------------------- +
! 8 ! X← a X !        !        !   !
+ -------------------------------- +
")

  (test-case grammar expected-table))
